//+build !noasm !appengine
// AUTO-GENERATED BY C2GOASM -- DO NOT EDIT

TEXT Â·__sum_float64(SB), $56-24

	MOVQ buf+0(FP), DI
	MOVQ len+8(FP), SI
	MOVQ res+16(FP), DX
	ADDQ $8, SP

	LONG $0xc057f8c5               // vxorps    xmm0, xmm0, xmm0
	LONG $0x247c8948; BYTE $0x28   // mov    qword [rsp + 40], rdi
	LONG $0x24247489               // mov    dword [rsp + 36], esi
	LONG $0x24548948; BYTE $0x18   // mov    qword [rsp + 24], rdx
	LONG $0x4411fbc5; WORD $0x1024 // vmovsd    qword [rsp + 16], xmm0
	QUAD $0x000000000c2444c7       // mov    dword [rsp + 12], 0

LBB0_1:
	LONG $0x0c24448b               // mov    eax, dword [rsp + 12]
	LONG $0x2424443b               // cmp    eax, dword [rsp + 36]
	JGE  LBB0_4
	LONG $0x24448b48; BYTE $0x28   // mov    rax, qword [rsp + 40]
	LONG $0x244c6348; BYTE $0x0c   // movsxd    rcx, dword [rsp + 12]
	LONG $0x0410fbc5; BYTE $0xc8   // vmovsd    xmm0, qword [rax + 8*rcx]
	LONG $0x4458fbc5; WORD $0x1024 // vaddsd    xmm0, xmm0, qword [rsp + 16]
	LONG $0x4411fbc5; WORD $0x1024 // vmovsd    qword [rsp + 16], xmm0
	LONG $0x0c24448b               // mov    eax, dword [rsp + 12]
	WORD $0xc083; BYTE $0x01       // add    eax, 1
	LONG $0x0c244489               // mov    dword [rsp + 12], eax
	JMP  LBB0_1

LBB0_4:
	LONG $0x4410fbc5; WORD $0x1024 // vmovsd    xmm0, qword [rsp + 16]
	LONG $0x24448b48; BYTE $0x18   // mov    rax, qword [rsp + 24]
	LONG $0x0011fbc5               // vmovsd    qword [rax], xmm0
	SUBQ $8, SP
	RET
